package ${package.Controller};


import javax.annotation.Resource;

import org.springframework.web.bind.annotation.*;
import ${package.Entity}.${entity};
import ${cfg.packFacade}.${facadeName};

#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
/**
 * @author ${author}
 * @since ${date}
 * @version
 */

@RequestMapping("/${cfg.targetPackage}/${table.entityPath}")
@RestController
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Resource
    private ${facadeName} ${table.entityPath}Facade;


    @PostMapping("/list")
    public Result<PageInfo<${table.entityName}>> list(@RequestBody PageParam<${table.entityName}> pageDto) {
        // 分页
        return ${table.entityPath}Facade.list(pageDto);
    }


    /**
    * 保存
    */
    @PostMapping("/save")
    public Result<?> save(@RequestBody ${table.entityName} ${table.entityPath}) {
        return ${table.entityPath}Facade.save(${table.entityPath});
    }

    /**
    * 修改
    */
    @PostMapping("/update")
    public Result<?> update(@RequestBody ${table.entityName} ${table.entityPath}) {
        return ${table.entityPath}Facade.update(${table.entityPath});
    }

    /**
     *   根据id逻辑删除
    */
    @PostMapping("/logicalDelById")
    public Result<?> logicalDeleteById(@RequestBody ${table.entityName} ${table.entityPath}){
        return ${table.entityPath}Facade.logicalDelById(${table.entityPath});
    }


    /**
    * 根据id逻辑批量删除
    */
    @PostMapping("/logicalBatchDelById")
    public Result<?> logicalBatchDeleteById(
            @RequestBody List<${table.entityName}> ${table.entityPath}List) {
        return ${table.entityPath}Facade.logicalBatchDelById(${table.entityPath}List);
    }


    /**
     *通过Id查询
    */
    @GetMapping("/getById")
    public Result<${table.entityName}> getById(@RequestParam(value = "id") Serializable id){
        return ${table.entityPath}Facade.getById(id);
    }

    /**
    * 查询全部 可带条件,不分页
    * @return
    */
    @PostMapping("/getAll")
    public Result<List<${entity}>> getAll(@RequestBody ${table.entityName} ${table.entityPath}){
        return ${table.entityPath}Facade.getAll(${table.entityPath});
    }

    /**
    * 更新状态
    */
    @PostMapping("/modifyState")
    public Result<?> modifyState(@RequestBody ${table.entityName} ${table.entityPath}){
        return ${table.entityPath}Facade.updateState(${table.entityPath});
    }
}



